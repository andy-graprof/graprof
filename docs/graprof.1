.\" Manpage for graprof.
.\" Contact <andreas@grapentin.org> to suggest improvements or report errors.

.TH man 1 "04 September 2013" "0.5" "graprof man page"
.SH NAME
graprof \- a profilng and trace analysis tool
.SH SYNOPSIS
graprof [-CFgM?V] [-o <file>] [--call-graph] [--flat-profile] [--no-gui]
 [--memory-profile] [--output=<file>] [--help] [--usage]
 [--version] <binary file> <trace file>
.SH DESCRIPTION
Graprof is a profiling and trace analysis tool for C projects.

The development of graprof has been inspired by the profiling tools gprof and mtrace, and their inability to work together. Based on the most basic profiling methods the GNU toolchain has to offer, graprof aims to provide a low-impact easy to use, high-precision profiling method, as well as a sophisticated trace analysis tool which, sadly, is not yet implemented as of the current 0.5 release.

The information in this file, as well as some additional documentation, can be found on <http://graprof.grapentin.org>.

If you have found a bug, please do not hesitate to report it at graprof's bug tracker found on <http://github.com/andy-graprof/graprof/issues>.

If you have any suggestions, on how graprof can be improved, or want to submit a bug but loathe to create an account at the bug tracking system, just send an email to <andreas@grapentin.org> and I will see what I can do.

If you want to support graprof, or its developers (me), have a look at <http://graprof.grapentin.org?page=support>, there are numerous ways to support graprof, from donating to just using it and spreading the word! I would appreciate it :)
.SH QUICK-START GUIDE
To instruct your application to write program traces, you have to add
 to CFLAGS:   -finstrument-functions -g
 to LDFLAGS:  -lgraprof

and recompile.

This instrumented binary should now be invoked with GRAPROF_OUT set to the filename you want the trace data to be written to, for example

 GRAPROF_OUT=gp.out ./your_application

To analyze the trace, invoke the graprof application, and pass the path to your binary, and the path to the trace file as arguments, for example:

 graprof your_application gp.out -FCMg -o your_application.profile
 
The -FCMg switch tells graprof to print the full analysis result to the specified profile file. 
.SH OPTIONS
Graprof takes a couple of arguments to control the amount of profiling output generated.
.TP
.BR \-C ", " \-\-call\-graph
The \fB \-C \fR option instructs graprof to generate a call graph from the input trace file
.PP
.TP
.BR \-F ", " \-\-flat\-profile
The \fB -F \fR option instructs graprof to generate a flat profile from the input trace file. If \fB \-C \fR is also specified, the flat profile listing will include ids to reference functions in the call graph.
.PP
.TP
.BR \-M ", " \-\-memory\-profile
The \fB \-M \fR option instructs graprof to generate a memory profile from the input trace file, if allocation events are available.
.PP
.TP
.BR \-g ", " \-\-no\-gui
If the \fB \-g \fR option is given, graprof will not launch the trace visualization GUI, which is currently still in development. At this time, specifying this option results in an \fB ENOSYS \fR occurring, and a corresponding warning printed.
.PP
.TP
.B \-o \fIfilename\fR", "\fB\-\-output=\fIfilename\fR
This option allows specifying an output file, that the profiling results will be written out. Default is \fBstdout\fR
.
.PP
.SH BUGS
Graprof is still mainly untested. There is only so much testing a single person can do, so this is mainly where graprof needs support from YOU! If you find any suspicious, reproducable behaviour, please file a bug on <http://github.com/andy-graprof/graprof/issues>. If you want to send suggestions, regarding graprof itself, the website, or just want to chat with me a little, you can also mail <graprof@grapentin.org> and I will answer as soon as I can.

Apart from the lack of testing, graprof also has a couple of conceptual limitations, all of which are decribed in detail in the \fBREADME\fR included in the source distribution, and on the website <http://graprof.grapentin.org>
.SH SEE ALSO
gprof(1), mtrace(3)

Additional documentation can be found in the README of the source distribution and on the graprof website <http://graprof.grapentin.org>.
.SH COPYRIGHT
Copyright (c) 2013 Andreas Grapentin <andreas@grapentin.org>

Permission is granted to copy, distribute and/or modify this document under the terms of the GNU Free Documentation License, Version 1.3 or any later version published by the Free Software Foundation; with no Invariant Sections, with no Front-Cover Texts, and with no Back-Cover Texts.  A copy of the license is included in the section entitled "GNU Free Documentation License".
